{"version":3,"sources":["Components/Calculator.js","Components/Formula.js","Components/Output.js","Components/CalcButtons.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","isOperator","endsWithOperator","endsWithNegativeSign","Calculator","props","state","currentVal","prevVal","formula","currentSign","lastClicked","maxDigitWarning","bind","handleOperators","handleEvaluate","initialize","handleDecimal","handleNumbers","this","setState","setTimeout","includes","expression","test","slice","replace","answer","Math","round","eval","toString","evaluated","op","value","number","length","match","className","style","textAlign","fontSize","currentValue","decimal","evaluate","numbers","operators","React","Component","Formula","Output","id","Buttons","container","spacing","item","xs","variant","onClick","color","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3510ac6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Formula from \"./Formula\";\r\nimport Output from \"./Output\";\r\nimport Buttons from \"./CalcButtons\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n}));\r\nconst isOperator = /[x/+-]/,\r\n  endsWithOperator = /[x+-/]$/,\r\n  endsWithNegativeSign = /\\d[x/+-]{1}-$/;\r\nexport default class Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentVal: \"0\",\r\n      prevVal: \"0\",\r\n      formula: \"\",\r\n      currentSign: \"pos\",\r\n      lastClicked: \"\",\r\n    };\r\n    this.maxDigitWarning = this.maxDigitWarning.bind(this);\r\n    this.handleOperators = this.handleOperators.bind(this);\r\n    this.handleEvaluate = this.handleEvaluate.bind(this);\r\n    this.initialize = this.initialize.bind(this);\r\n    this.handleDecimal = this.handleDecimal.bind(this);\r\n    this.handleNumbers = this.handleNumbers.bind(this);\r\n  }\r\n\r\n  maxDigitWarning() {\r\n    this.setState({\r\n      currentVal: \"Digit Limit Met\",\r\n      prevVal: this.state.currentVal,\r\n    });\r\n    setTimeout(() => this.setState({ currentVal: this.state.prevVal }), 1000);\r\n  }\r\n\r\n  handleEvaluate() {\r\n    if (!this.state.currentVal.includes(\"Limit\")) {\r\n      let expression = this.state.formula;\r\n      while (endsWithOperator.test(expression)) {\r\n        expression = expression.slice(0, -1);\r\n      }\r\n      expression = expression\r\n        .replace(/x/g, \"*\")\r\n        .replace(/-/g, \"-\")\r\n        .replace(\"--\", \"+0+0+0+0+0+0+\");\r\n      let answer = Math.round(1000000000000 * eval(expression)) / 1000000000000;\r\n      this.setState({\r\n        currentVal: answer.toString(),\r\n        formula:\r\n          expression\r\n            .replace(/\\*/g, \"â‹…\")\r\n            .replace(/-/g, \"-\")\r\n            .replace(\"+0+0+0+0+0+0+\", \"--\")\r\n            .replace(/(x|\\/|\\+)-/, \"$1-\")\r\n            .replace(/^-/, \"-\") +\r\n          \"=\" +\r\n          answer,\r\n        prevVal: answer,\r\n        evaluated: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOperators(op) {\r\n    if (!this.state.currentVal.includes(\"Limit\")) {\r\n      const value = op;\r\n      const { formula, prevVal, evaluated } = this.state;\r\n      this.setState({ currentVal: value, evaluated: false });\r\n      if (evaluated) {\r\n        this.setState({ formula: prevVal + value });\r\n      } else if (!endsWithOperator.test(formula)) {\r\n        this.setState({\r\n          prevVal: formula,\r\n          formula: formula + value,\r\n        });\r\n      } else if (!endsWithNegativeSign.test(formula)) {\r\n        this.setState({\r\n          formula:\r\n            (endsWithNegativeSign.test(formula + value) ? formula : prevVal) +\r\n            value,\r\n        });\r\n      } else if (value !== \"-\") {\r\n        this.setState({\r\n          formula: prevVal + value,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleNumbers(number) {\r\n    if (!this.state.currentVal.includes(\"Limit\")) {\r\n      const { currentVal, formula, evaluated } = this.state;\r\n      const value = number;\r\n      this.setState({ evaluated: false });\r\n      if (currentVal.length > 21) {\r\n        this.maxDigitWarning();\r\n      } else if (evaluated) {\r\n        this.setState({\r\n          currentVal: value,\r\n          formula: value !== \"0\" ? value : \"\",\r\n        });\r\n      } else {\r\n        this.setState({\r\n          currentVal:\r\n            currentVal === \"0\" || isOperator.test(currentVal)\r\n              ? value\r\n              : currentVal + value,\r\n          formula:\r\n            currentVal === \"0\" && value === \"0\"\r\n              ? formula === \"\"\r\n                ? value\r\n                : formula\r\n              : /([^.0-9]0|^0)$/.test(formula)\r\n              ? formula.slice(0, -1) + value\r\n              : formula + value,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDecimal() {\r\n    if (this.state.evaluated === true) {\r\n      this.setState({\r\n        currentVal: \"0.\",\r\n        formula: \"0.\",\r\n        evaluated: false,\r\n      });\r\n    } else if (\r\n      !this.state.currentVal.includes(\".\") &&\r\n      !this.state.currentVal.includes(\"Limit\")\r\n    ) {\r\n      this.setState({ evaluated: false });\r\n      if (this.state.currentVal.length > 21) {\r\n        this.maxDigitWarning();\r\n      } else if (\r\n        endsWithOperator.test(this.state.formula) ||\r\n        (this.state.currentVal === \"0\" && this.state.formula === \"\")\r\n      ) {\r\n        this.setState({\r\n          currentVal: \"0.\",\r\n          formula: this.state.formula + \"0.\",\r\n        });\r\n      } else {\r\n        this.setState({\r\n          currentVal: this.state.formula.match(/(-?\\d+\\.?\\d*)$/)[0] + \".\",\r\n          formula: this.state.formula + \".\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  initialize() {\r\n    this.setState({\r\n      currentVal: \"0\",\r\n      prevVal: \"0\",\r\n      formula: \"\",\r\n      currentSign: \"pos\",\r\n      lastClicked: \"\",\r\n      evaluated: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"calculator\">\r\n          <Paper style={{textAlign: \"center\", fontSize: '50px'}}>\r\n            <Formula formula={this.state.formula.replace(/x/g, \"â‹…\")} />\r\n            <Output currentValue={this.state.currentVal} />\r\n          </Paper>\r\n          <Buttons\r\n            decimal={this.handleDecimal}\r\n            evaluate={this.handleEvaluate}\r\n            initialize={this.initialize}\r\n            numbers={this.handleNumbers}\r\n            operators={this.handleOperators}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nexport default class Formula extends React.Component {\r\n    render() {\r\n      return <div className=\"formulaScreen\">{this.props.formula}</div>;\r\n    }\r\n  }\r\n  ","import React from 'react';\r\nexport default class Output extends React.Component {\r\n    render() {\r\n      return (\r\n        <div className=\"outputScreen\" id=\"display\">\r\n          {this.props.currentValue}\r\n        </div>\r\n      );\r\n    }\r\n  }","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nexport default class Buttons extends React.Component {\r\n  render() {\r\n    return (\r\n      <Paper>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <Button\r\n              variant=\"contained\"\r\n              id=\"clear\"\r\n              onClick={this.props.initialize}\r\n              value=\"AC\"\r\n            >\r\n              AC\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              id=\"divide\"\r\n              onClick={() => this.props.operators(\"/\")}\r\n              value=\"/\"\r\n            >\r\n              /\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              id=\"multiply\"\r\n              onClick={() => this.props.operators(\"x\")}\r\n              value=\"x\"\r\n            >\r\n              x\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Button\r\n              id=\"add\"\r\n              onClick={() => this.props.operators(\"+\")}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              value=\"+\"\r\n            >\r\n              +\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              id=\"subtract\"\r\n              onClick={() => this.props.operators(\"-\")}\r\n              value=\"â€‘\"\r\n            >\r\n              â€‘\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button\r\n              id=\"seven\"\r\n              onClick={() => this.props.numbers(\"7\")}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              value=\"7\"\r\n            >\r\n              7\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button\r\n              id=\"eight\"\r\n              onClick={() => this.props.numbers(\"8\")}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              value=\"8\"\r\n            >\r\n              8\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button\r\n              id=\"nine\"\r\n              onClick={() => this.props.numbers(\"9\")}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              value=\"9\"\r\n            >\r\n              9\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n            <Button\r\n              id=\"four\"\r\n              onClick={() => this.props.numbers(\"4\")}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              value=\"4\"\r\n            >\r\n              4\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button\r\n              id=\"five\"\r\n              onClick={() => this.props.numbers(\"5\")}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              value=\"5\"\r\n            >\r\n              5\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button\r\n              id=\"six\"\r\n              onClick={() => this.props.numbers(\"6\")}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              value=\"6\"\r\n            >\r\n              6\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n            <Button\r\n              id=\"one\"\r\n              onClick={() => this.props.numbers(\"1\")}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              value=\"1\"\r\n            >\r\n              1\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button\r\n              id=\"two\"\r\n              onClick={() => this.props.numbers(\"2\")}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              value=\"2\"\r\n            >\r\n              2\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button\r\n              id=\"three\"\r\n              onClick={() => this.props.numbers(\"3\")}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              value=\"3\"\r\n            >\r\n              3\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n            <Button\r\n              id=\"decimal\"\r\n              onClick={this.props.decimal}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              value=\".\"\r\n            >\r\n              .\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className=\"jumbo\"\r\n              id=\"zero\"\r\n              onClick={() => this.props.numbers(\"0\")}\r\n              value=\"0\"\r\n            >\r\n              0\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Button\r\n              id=\"equals\"\r\n              onClick={this.props.evaluate}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              value=\"=\"\r\n            >\r\n              =\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport Calculator from './Components/Calculator';\nfunction App() {\n  return (\n    <Calculator />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}